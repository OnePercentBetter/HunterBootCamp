Time Complexity: O(n)
Edge Cases: If arr is empty, if array is full of negative numbers, if there's only one element in the array, if there's one element and it's -1
Hints: How can we immediately know what's to the right of an element without having to traverse twice, What can we do with our previous element
to keep track of current elements that are bigger than our greatest?
class Solution {
public:
    vector<int> replaceElements(vector<int>& arr) {
        int previous= -1;
        for(int i=arr.size()-1;i>=0;i--){
            if(arr[i] > previous){
                int temp = arr[i];
                arr[i] = previous;
                previous = temp;
            }else{
                arr[i] = previous;
            }
        }
        return arr;
    }
};
