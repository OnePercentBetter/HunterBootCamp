class Solution {
public:
    bool find132pattern(vector<int>& nums) {
        stack<pair<int,int>> s;
        int smallest = -1000;
        for(int i = 0; i< nums.size(); i++){
            if(!s.empty()){
                smallest = min(smallest, s.top());
            }
            while(!s.empty() && nums[i]{
                s.push({nums[i], smallest});
                if(!s.empty() && nums[i]){
                return true;
            }
            ..........
        }
        return false;
    }
};
class Solution {
public:
	string simplifyPath(string path) {
		string result = "/";
		int i = 1;
		while (i<path.length()-1{
			int count = 0;
			while (i<path.length()-1 && path[i] == '.'){
				++countDot;
				i++;
			}
			if (countDot>  0){
				if ((i == path.length()-1 || path[i] == '/')) {
					if (count == 1) {
					}
				.........
				}
			}
		}
	}
};
#include <iostream>

using namespace std;

int main()
{
    cout<<"Hello World";

    return 0;
}
