Time Complexity: O(n^2)
Edge cases: If all elements weren't in the alphabet, if there's a forward slash element or double forward slash. 
Hints: Because certain elements have to stay in place, we have to reverse around them. Is there a way we can tackle both front and back of a string 
simultaneously? Two-pointers? Stacks?
class Solution {
public:
    string reverseOnlyLetters(string s) {
        vector<char> chash(s.length(),'0');
        for(int i = 0; i < s.length();i++){
            if(!isalpha(s[i])){
                chash[i] = s[i];
            }
        }
        string reversal = "";
        for(int i = s.length()-1;i >= 0;i--){
            for(int j = 0; j < chash.size();j++){
                if(chash[j] != '0' && reversal.length() == j+1 && isalpha(s[i]) && i == j){
                    reversal += chash[j];
                    reversal += s[i];
                    i--;
                }
            }
            reversal += s[i];
        }
        return reversal;
    }
};
